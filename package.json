{
  "name": "woven-web-app",
  "version": "1.0.0",
  "description": "Woven Map Report Generator + Raven Calder Chat Interface",
  "private": true,
  "scripts": {
    "build:css": "tailwindcss -i ./src/input.css -o ./dist/output.css --minify",
    "build:offshoot": "tailwindcss -c tailwind.offshoot.config.js -i ./offshoot/offshoot.css -o ./offshoot/offshoot.min.css --minify",
    "dev:tailwind": "tailwindcss -i ./src/input.css -o ./dist/output.css --watch",
    "check-env": "node -e \"if (!require('fs').existsSync('.env')) { console.error('Error: .env file not found. Copy .env.example to .env and configure your API keys.'); process.exit(1); } else { console.log('Environment file found.'); }\"",
    "dev": "npm run check-env && netlify dev",
    "dev:nextjs": "npm run check-env && netlify dev",
    "dev:full": "bash -c 'npm run dev:tailwind & netlify dev'",
    "dev:all": "concurrently \"npm run dev\" \"npm run dev:tailwind\"",
    "build": "npm run build:css && next build",
    "start": "npm run check-env && npm run build:css && netlify dev",
    "env:required": "node scripts/check-env-required.js",
    "tinker": "node scripts/tinker-chat.js",
    "tinker:watch": "nodemon scripts/tinker-chat.js",
    "verify-copilot": "node verify-copilot-setup.js",
    "test": "node test/astrology-mathbrain.test.js",
    "test:smoke": "node test/smoke-tests.js",
    "test:endpoints": "node test/endpoint-health-check.js",
    "test:chat-guard": "node test/chat-guard.test.js",
    "test:auth0": "node test/auth0-config-validator.js",
    "test:deployment": "node test/deployment-verification.js",
    "test:all": "node test/run-all-smoke-tests.js",
    "test:production": "node test/run-all-smoke-tests.js --environment=production",
    "test:ci": "node test/run-all-smoke-tests.js --skip-network",
    "smoke-test": "npm run test:all",
    "fix:auth0": "node scripts/fix-auth0.js",
    "smoke:auth0": "node scripts/smoke-auth0.js",
    "postinstall": "if [ -f package.json ] && node -e \"try{require('concurrently')}catch(e){process.exit(1)}\"; then echo 'concurrently already installed'; else echo 'Installing concurrently...'; npm i -D concurrently; fi",
    "auth:check": "node scripts/auth-config-check.js"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "html2pdf.js": "^0.12.0",
    "jsonwebtoken": "^9.0.2",
    "jszip": "^3.10.1",
    "jwks-rsa": "^3.2.0",
    "luxon": "^3.4.4",
    "next": "14.2.5",
    "node-fetch": "^2.7.0",
    "pdfjs-dist": "^5.4.149",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "tz-lookup": "^6.1.25",
    "uuid": "^9.0.1",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@netlify/plugin-nextjs": "^5.8.1",
    "@types/node": "20.11.30",
    "@types/react": "18.2.79",
    "@types/uuid": "^9.0.7",
    "autoprefixer": "^10.4.0",
    "concurrently": "^9.2.1",
    "eslint": "8.57.0",
    "eslint-config-next": "14.2.5",
    "netlify-cli": "^17.38.1",
    "nodemon": "3.1.4",
    "postcss": "^8.4.0",
    "tailwindcss": "^3.4.3",
    "typescript": "5.9.2"
  }
}
